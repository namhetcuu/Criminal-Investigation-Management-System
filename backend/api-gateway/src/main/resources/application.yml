server:
  port: 8080
app:
  api-prefix: /api/v1
spring:
  application:
    name: gateway-service
  data:
    redis:
      port: 6379
      host: ${REDIS_HOST:localhost}
  security:
    oauth2:
      resourceserver:
        jwt:
          jwk-set-uri: lb://auth-service/.well-known/jwks.json

  main:
    allow-bean-definition-overriding: true
  cloud:
    gateway:
      default-filters:
        - name: RequestRateLimiter
          args:
            # Trong 1s sẽ có 10 token được cấp phát
            redis-rate-limiter.replenishRate: 10
            # Số lượng token tối đa trong 1s
            redis-rate-limiter.burstCapacity: 20
            redis-rate-limiter.requestedTokens: 1
        #        - StripPrefix=1 # Remove prefix /api-gateway from request path
        - name: Retry
          args:
            retries: 2
            statuses: BAD_GATEWAY,SERVICE_UNAVAILABLE,GATEWAY_TIMEOUT
            methods: GET,POST,PUT,DELETE
            backoff:
              firstBackoff: 3000ms
              maxBackoff: 5000ms
              factor: 1
              basedOnPreviousValue: false
            jitter:
              randomFactor: 0.5
            timeout: 100ms
      discovery:
        locator:
          enabled: true
      routes:
        - id: suspect-service
          uri: lb://suspect-service
          predicates:
            - Path=${app.api-prefix}/suspects/**
          filters:
            - PreserveHostHeader
            - StripPrefix=2 # Remove prefix /api/v1 from request path
        - id: auth-service
          uri: lb://auth-service
          predicates:
            - Path=${app.api-prefix}/auth/**,${app.api-prefix}/users/**,${app.api-prefix}/roles/**,${app.api-prefix}/permissions/**
          filters:
            - PreserveHostHeader
            - StripPrefix=2 # Remove prefix /api/v1 from request path
          # Config rate limit for service product-service
          #            - name: CircuitBreaker
          #              args:
          #                name: default
          #                fallbackUri: forward:/fallback/product-service
eureka:
  instance:
    #    hostname: ${HOST_IP_ADDRESS}
    hostname: ${HOST_IP_ADDRESS:localhost}
  client:
    service-url:
      defaultZone: ${EUREKA_SERVER_URL:http://localhost:8761/eureka}
      register-with-eureka: true
      fetch-registry: true
management:
  endpoint:
    health:
      show-details: always
