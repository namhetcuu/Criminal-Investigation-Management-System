spring.application.name=holiday-service
server.port=${SERVER_PORT:8080}

# Security
jwt.public-key-location=keys/public.pem
internal.api-key=${INTERNAL_API_KEY:jHhHXen9L6sbH1ZjlO4iT8J6mt3qYVfc87juXtFpU6ybytNvaAIITl3v6v4cSZjd}

# Database
spring.datasource.url=${DB_URL:jdbc:mysql://127.0.0.1:3306/holiday_service}
spring.datasource.username=${DB_USERNAME:root}
spring.datasource.password=${DB_PASSWORD:10092412}
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.jpa.database-platform=org.hibernate.dialect.MySQL8Dialect
spring.jpa.hibernate.ddl-auto=${DDL_AUTO:update}
spring.jpa.show-sql=${SHOW_SQL:false}
spring.jpa.properties.hibernate.format_sql=true

# Redis
spring.data.redis.host=${REDIS_HOST:localhost}
spring.data.redis.port=${REDIS_PORT:6379}
spring.data.redis.timeout=2000ms

# Kafka - Modern Configuration
spring.kafka.bootstrap-servers=${KAFKA_BOOTSTRAP_SERVERS:192.168.1.18:9092}

# Consumer Configuration 
spring.kafka.consumer.group-id=${KAFKA_GROUP_ID:holiday-service}
spring.kafka.consumer.auto-offset-reset=${KAFKA_AUTO_OFFSET_RESET:earliest}
spring.kafka.consumer.enable-auto-commit=false
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=com.holidayservice.event.*
spring.kafka.consumer.properties.spring.json.use.type.headers=false
spring.kafka.consumer.fetch-min-size=1
spring.kafka.consumer.fetch-max-wait=500ms
spring.kafka.consumer.max-poll-records=500

# Producer Configuration   
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.producer.properties.spring.json.add.type.headers=false
spring.kafka.producer.acks=1
spring.kafka.producer.retries=3
spring.kafka.producer.batch-size=16384
spring.kafka.producer.linger-ms=5
spring.kafka.producer.buffer-memory=33554432
spring.kafka.producer.compression-type=snappy

# Listener Configuration (Modern Spring Boot 3.1+)
spring.kafka.listener.ack-mode=manual_immediate
spring.kafka.listener.concurrency=${KAFKA_CONCURRENCY:3}
spring.kafka.listener.poll-timeout=3s
spring.kafka.listener.idle-event-interval=30s

# Error Handling & Retry 
spring.kafka.consumer.properties.max.poll.interval.ms=300000
spring.kafka.consumer.properties.session.timeout.ms=10000
spring.kafka.consumer.properties.heartbeat.interval.ms=3000

# External Services
services.user.url=${USER_SERVICE_URL:http://user-service:8080}
services.notification.url=${NOTIFICATION_SERVICE_URL:http://notification-service:8080}
services.report.url=${REPORT_SERVICE_URL:http://report-service:8080}
services.case.url=${CASE_SERVICE_URL:http://case-service:8080}

# Documentation
springdoc.swagger-ui.path=/swagger-ui
springdoc.api-docs.path=/v3/api-docs
springdoc.api-docs.enabled=${SWAGGER_ENABLED:true}
springdoc.swagger-ui.enabled=${SWAGGER_ENABLED:true}

# Logging
logging.file.name=logs/holiday-service.log
logging.level.com.holidayservice=${LOG_LEVEL:INFO}
logging.level.org.springframework.kafka=${KAFKA_LOG_LEVEL:WARN}
logging.level.org.springframework.security=${SECURITY_LOG_LEVEL:WARN}
logging.pattern.console=%d{HH:mm:ss.SSS} %-5level [%thread] %logger{36} - %msg%n
logging.pattern.file=%d{yyyy-MM-dd HH:mm:ss} %-5level [%thread] %logger{36} - %msg%n

# Spring Boot Configuration
spring.docker.compose.enabled=false
spring.mvc.throw-exception-if-no-handler-found=true
spring.web.resources.add-mappings=false

